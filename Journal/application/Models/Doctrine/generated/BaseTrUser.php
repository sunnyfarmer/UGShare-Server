<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrUser', 'doctrineConn');

/**
 * BaseTrUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property  $id
 * @property  $password
 * @property  $username
 * @property  $telephone
 * @property  $ava_id_ref
 * @property  $followNumber
 * @property  $followedNumber
 * @property TrAvatar $TrAvatar
 * @property Doctrine_Collection $TrBlacklist
 * @property Doctrine_Collection $TrBlacklist_2
 * @property Doctrine_Collection $TrEmail
 * @property Doctrine_Collection $TrJournal
 * @property Doctrine_Collection $TrJournalComment
 * @property Doctrine_Collection $TrJournalFavouriteList
 * @property Doctrine_Collection $TrJournalMovement
 * @property Doctrine_Collection $TrJournalPlaceComment
 * @property Doctrine_Collection $TrJournalPlaceFavouriteList
 * @property Doctrine_Collection $TrOnlineRecord
 * @property Doctrine_Collection $TrSaying
 * @property Doctrine_Collection $TrUserImSetting
 * @property Doctrine_Collection $TrUserLocationInfo
 * @property Doctrine_Collection $TrUserMark
 * @property Doctrine_Collection $TrUserToUser
 * @property Doctrine_Collection $TrUserToUser_2
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrUser extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('tr_user');
        $this->hasColumn('id', '', null, array(
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('password', '', null, array(
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('username', '', null, array(
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('telephone', '', null, array(
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ava_id_ref', '', null, array(
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('followNumber', '', null, array(
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('followedNumber', '', null, array(
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TrAvatar', array(
             'local' => 'ava_id_ref'));

        $this->hasMany('TrBlacklist', array(
             'foreign' => 'usr_id_self_ref'));

        $this->hasMany('TrBlacklist as TrBlacklist_2', array(
             'foreign' => 'usr_id_other_ref'));

        $this->hasMany('TrEmail', array(
             'foreign' => 'usr_id_ref'));

        $this->hasMany('TrJournal', array(
             'foreign' => 'usr_id_ref'));

        $this->hasMany('TrJournalComment', array(
             'foreign' => 'usr_id_ref'));

        $this->hasMany('TrJournalFavouriteList', array(
             'foreign' => 'usr_id_ref'));

        $this->hasMany('TrJournalMovement', array(
             'foreign' => 'usr_id_ref'));

        $this->hasMany('TrJournalPlaceComment', array(
             'foreign' => 'usr_id_ref'));

        $this->hasMany('TrJournalPlaceFavouriteList', array(
             'foreign' => 'usr_id_ref'));

        $this->hasMany('TrOnlineRecord', array(
             'foreign' => 'usr_id_ref'));

        $this->hasMany('TrSaying', array(
             'foreign' => 'usr_id_ref'));

        $this->hasMany('TrUserImSetting', array(
             'foreign' => 'usr_id_ref'));

        $this->hasMany('TrUserLocationInfo', array(
             'foreign' => 'usr_id_ref'));

        $this->hasMany('TrUserMark', array(
             'foreign' => 'usr_id_ref'));

        $this->hasMany('TrUserToUser', array(
             'foreign' => 'usr_id_self_ref'));

        $this->hasMany('TrUserToUser as TrUserToUser_2', array(
             'foreign' => 'usr_id_other_ref'));
    }
}